From 6edc6d41bf3f5a3cde6547c4827c40e745dc0f6f Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Fri, 18 Nov 2022 16:12:08 +0100
Subject: [PATCH 04/20] bcm-knet: update API for linux 5.6.0

---
 .../linux/kernel/modules/bcm-knet/bcm-knet.c  | 71 ++++++++++++++++++-
 1 file changed, 69 insertions(+), 2 deletions(-)

diff --git a/sdk-6.5.24/systems/linux/kernel/modules/bcm-knet/bcm-knet.c b/sdk-6.5.24/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
index 025c6d759840..b701c38c2027 100755
--- a/sdk-6.5.24/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
+++ b/sdk-6.5.24/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
@@ -6861,6 +6861,15 @@ bkn_proc_link_write(struct file *file, const char *buf,
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_link_file_ops = {
+    proc_open:       bkn_proc_link_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_link_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_link_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_link_open,
@@ -6869,6 +6878,7 @@ struct file_operations bkn_proc_link_file_ops = {
     write:      bkn_proc_link_write,
     release:    single_release,
 };
+#endif
 
 /*
  * Device Rate Control Proc Read Entry
@@ -6971,6 +6981,15 @@ bkn_proc_rate_write(struct file *file, const char *buf,
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_rate_file_ops = {
+    proc_open:       bkn_proc_rate_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_rate_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_rate_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_rate_open,
@@ -6979,6 +6998,7 @@ struct file_operations bkn_proc_rate_file_ops = {
     write:      bkn_proc_rate_write,
     release:    single_release,
 };
+#endif
 
 /*
  * Driver DMA Proc Entry
@@ -7221,6 +7241,14 @@ bkn_seq_dma_open(struct inode *inode, struct file *file)
     return seq_open(file, &bkn_seq_dma_ops);
 };
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_seq_dma_file_ops = {
+    proc_open:       bkn_seq_dma_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_release:    seq_release,
+};
+#else
 static struct file_operations bkn_seq_dma_file_ops = {
     .owner   = THIS_MODULE,
     .open    = bkn_seq_dma_open,
@@ -7228,6 +7256,7 @@ static struct file_operations bkn_seq_dma_file_ops = {
     .llseek  = seq_lseek,
     .release = seq_release
 };
+#endif
 
 /*
  * Device Debug Control Proc Write Entry
@@ -7358,6 +7387,15 @@ static int bkn_proc_debug_open(struct inode * inode, struct file * file)
     return single_open(file, bkn_proc_debug_show, NULL);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_debug_file_ops = {
+    proc_open:       bkn_proc_debug_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_debug_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_debug_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_debug_open,
@@ -7366,6 +7404,7 @@ struct file_operations bkn_proc_debug_file_ops = {
     write:      bkn_proc_debug_write,
     release:    single_release,
 };
+#endif
 
 /*
  * Device Statistics Proc Entry
@@ -7487,6 +7526,15 @@ bkn_proc_stats_write(struct file *file, const char *buf,
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_stats_file_ops = {
+    proc_open:       bkn_proc_stats_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_stats_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_stats_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_stats_open,
@@ -7495,7 +7543,7 @@ struct file_operations bkn_proc_stats_file_ops = {
     write:      bkn_proc_stats_write,
     release:    single_release,
 };
-
+#endif
 
 /*
  * Device Debug Statistics Proc Entry
@@ -7664,6 +7712,15 @@ bkn_proc_dstats_write(struct file *file, const char *buf,
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_dstats_file_ops = {
+    proc_open:       bkn_proc_dstats_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_dstats_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_dstats_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_dstats_open,
@@ -7672,6 +7729,7 @@ struct file_operations bkn_proc_dstats_file_ops = {
     write:      bkn_proc_dstats_write,
     release:    single_release,
 };
+#endif
 
 /*
  * PTP Statistics Proc Entry
@@ -7772,6 +7830,15 @@ bkn_proc_ptp_stats_write(struct file *file, const char *buf, size_t count, loff_
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+struct proc_ops bkn_proc_ptp_stats_file_ops = {
+    proc_open:       bkn_proc_ptp_stats_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      bkn_proc_ptp_stats_write,
+    proc_release:    single_release,
+};
+#else
 struct file_operations bkn_proc_ptp_stats_file_ops = {
     owner:      THIS_MODULE,
     open:       bkn_proc_ptp_stats_open,
@@ -7780,7 +7847,7 @@ struct file_operations bkn_proc_ptp_stats_file_ops = {
     write:      bkn_proc_ptp_stats_write,
     release:    single_release,
 };
-
+#endif
 
 static int
 bkn_proc_init(void)
-- 
2.50.1

