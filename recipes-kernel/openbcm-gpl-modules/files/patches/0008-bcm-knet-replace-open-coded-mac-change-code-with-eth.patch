From 3f0ecba854d17a19f7026cc2a4133b4fdab10a7f Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Fri, 18 Nov 2022 16:24:41 +0100
Subject: [PATCH 08/11] bcm-knet: replace open coded mac change code with
 eth_mac_addr

Linux 5.17 made netdev->dev_addr[] constant, so we cannot modify it
anymore. Since bkn_set_mac_address() just directly sets the mac address,
we can replace it with the generic eth_mac_addr() implementation, and
set the IFF_LIVE_ADDR_CHANGE flag to allow MAC address changes while the
device is up, as before.

Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 .../linux/kernel/modules/bcm-knet/bcm-knet.c  | 19 ++-----------------
 1 file changed, 2 insertions(+), 17 deletions(-)

diff --git a/sdk-6.5.27/systems/linux/kernel/modules/bcm-knet/bcm-knet.c b/sdk-6.5.27/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
index e78681e4afbf..d6068df18314 100755
--- a/sdk-6.5.27/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
+++ b/sdk-6.5.27/systems/linux/kernel/modules/bcm-knet/bcm-knet.c
@@ -5717,22 +5717,6 @@ bkn_open(struct net_device *dev)
     return 0;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
-static int
-bkn_set_mac_address(struct net_device *dev, void *addr)
-{
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,18,12))
-    if (!is_valid_ether_addr((const u8*)(((struct sockaddr *)addr)->sa_data))) {
-#else
-    if (!is_valid_ether_addr(((struct sockaddr *)addr)->sa_data)) {
-#endif
-        return -EINVAL;
-    }
-    memcpy(dev->dev_addr, ((struct sockaddr *)addr)->sa_data, dev->addr_len);
-    return 0;
-}
-#endif
-
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
 static int
 bkn_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
@@ -6871,7 +6855,7 @@ static const struct net_device_ops bkn_netdev_ops = {
     .ndo_get_stats       = bkn_get_stats,
     .ndo_validate_addr   = eth_validate_addr,
     .ndo_set_rx_mode     = bkn_set_multicast_list,
-    .ndo_set_mac_address = bkn_set_mac_address,
+    .ndo_set_mac_address = eth_mac_addr,
     .ndo_do_ioctl        = bkn_ioctl,
     .ndo_tx_timeout      = NULL,
     .ndo_change_mtu      = bkn_change_mtu,
@@ -7056,6 +7040,7 @@ bkn_init_ndev(u8 *mac, char *name)
     /* Device vectors */
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
     dev->netdev_ops = &bkn_netdev_ops;
+    dev->priv_flags |= IFF_LIVE_ADDR_CHANGE;
 #else
     dev->open = bkn_open;
     dev->hard_start_xmit = bkn_tx;
-- 
2.42.0

